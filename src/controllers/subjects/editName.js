const { Scenes } = require("telegraf")
const Subject = require("../../database/models/subject")
const { cancelKeyboard, cancelButton } = require("../../util/keyboards");
const { isValidSubjectName } = require("../../util/validator");

const editSubjectName = new Scenes.WizardScene("editSubjectName",
    async (ctx) => {
        if (!ctx.session.selectedSubject) {
            return await ctx.scene.enter('editSubject')
        }

        await ctx.replyWithHTML(`<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è —É—Ä–æ–∫–∞</b> \n\nüìå –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –º–µ–Ω—è—Ç—å –∏–º—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>${cancelButton}</b>`, cancelKeyboard)
        return ctx.wizard.next()
    },
    async (ctx) => {
        if (!ctx.message || !ctx.message.text || !isValidSubjectName(ctx.message.text)) {
            await ctx.replyWithHTML('‚ö†Ô∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è —É—Ä–æ–∫–∞</b> (<i>–¥–æ 25 —Å–∏–º–≤–æ–ª–æ–≤</i>)', cancelKeyboard);
            return;
        }

        const name = ctx.message.text
            .replaceAll("<", "")
            .replaceAll(">", "")

        if (name === ctx.session.selectedSubject.name) {
            await ctx.replyWithHTML('‚ö†Ô∏è <b>–ò–º—è –¥–æ–ª–∂–Ω–æ –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç –ø—Ä–æ—à–ª–æ–≥–æ</b>', cancelKeyboard);
            return;
        }

        let subject = await Subject.findOne({ user: String(ctx.from.id), name: name })

        if (subject) {
            await ctx.replyWithHTML('‚ö†Ô∏è <b>–≠—Ç–æ –∏–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ</b>', cancelKeyboard);
            return;
        }

        ctx.session.selectedSubject.name = name
        await Subject.findOneAndUpdate({ _id: ctx.session.selectedSubject._id }, { name: name })

        await ctx.replyWithHTML("‚úÖ –ò–º—è —É—Ä–æ–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–æ")
        return await ctx.scene.enter('editSubject')
    },
)

editSubjectName.command('back', async (ctx) => await ctx.scene.enter('editSubject'));
editSubjectName.hears(cancelButton, async (ctx) => { await ctx.scene.enter('editSubject') });

module.exports = editSubjectName;