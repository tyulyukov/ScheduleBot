const { Scenes } = require("telegraf")
const { cancelButton, editCancelKeyboard, editNameButton, editLinksButton } = require("../../util/keyboards");
const { deleteFromSession, saveToSession} = require("../../util/session");

const editSubject = new Scenes.BaseScene("editSubject")

editSubject.enter(async (ctx) => {
    if (!ctx.session.selectedSubject) {
        return await ctx.scene.enter('subjects')
    }

    await ctx.replyWithHTML(`‚úèÔ∏è –ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ä–æ–∫–∞ <b>${ctx.session.selectedSubject.name}</b> \n\n üìå –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Ä–æ–∫ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>${cancelButton}</b>`, editCancelKeyboard)
})

editSubject.leave(async (ctx) => {
    if (ctx.session["isEditTransition"] !== true) {
        if (ctx.session.selectedSubject)
            deleteFromSession(ctx, "selectedSubject")
    }

    deleteFromSession(ctx, "isEditTransition")
})

editSubject.command('back', async (ctx) => await ctx.scene.enter('subjects'))
editSubject.hears(cancelButton, async (ctx) => { await ctx.scene.enter('subjects') })
editSubject.hears(editNameButton, async (ctx) => {
    saveToSession(ctx, "isEditTransition", true)
    await ctx.scene.enter('editSubjectName')
})
editSubject.hears(editLinksButton, async (ctx) => {
    /*saveToSession(ctx, "isEditTransition", true)
    await ctx.scene.enter('editSubjectLinks')*/
    await ctx.replyWithHTML(`‚õî –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ`, editCancelKeyboard)
})

module.exports = editSubject;